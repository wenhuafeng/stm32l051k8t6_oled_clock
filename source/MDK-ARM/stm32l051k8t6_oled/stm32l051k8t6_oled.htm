<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [stm32l051k8t6_oled\stm32l051k8t6_oled.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image stm32l051k8t6_oled\stm32l051k8t6_oled.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Sat Oct 08 15:05:07 2022
<BR><P>
<H3>Maximum Stack Usage =        304 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; COMMON_Function &rArr; WIFI_SendCommand &rArr; WIFI_Init &rArr; PrintUsart2 &rArr; vsprintf
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[11]">ADC1_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">ADC1_COMP_IRQHandler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[11]">ADC1_COMP_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[e]">DMA1_Channel1_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[f]">DMA1_Channel2_3_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[10]">DMA1_Channel4_5_6_7_IRQHandler</a> from stm32l0xx_it.o(i.DMA1_Channel4_5_6_7_IRQHandler) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[9]">FLASH_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32l0xx_it.o(i.HardFault_Handler) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[17]">I2C1_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[18]">I2C2_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[12]">LPTIM1_IRQHandler</a> from stm32l0xx_it.o(i.LPTIM1_IRQHandler) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[1d]">LPUART1_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32l0xx_it.o(i.NMI_Handler) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[7]">PVD_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from stm32l0xx_it.o(i.PendSV_Handler) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[a]">RCC_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from stm32l0xx_it.o(i.RTC_IRQHandler) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[19]">SPI1_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[1a]">SPI2_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from stm32l0xx_it.o(i.SVC_Handler) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from stm32l0xx_it.o(i.SysTick_Handler) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[1f]">SystemInit</a> from system_stm32l0xx.o(i.SystemInit) referenced from startup_stm32l051xx.o(.text)
 <LI><a href="#[15]">TIM21_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[16]">TIM22_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[13]">TIM2_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[14]">TIM6_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[1b]">USART1_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[1c]">USART2_IRQHandler</a> from stm32l0xx_it.o(i.USART2_IRQHandler) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[25]">WIFI_Connected</a> from esp8266_at.o(i.WIFI_Connected) referenced from esp8266_at.o(.constdata)
 <LI><a href="#[27]">WIFI_ConnectedFail</a> from esp8266_at.o(i.WIFI_ConnectedFail) referenced from esp8266_at.o(.constdata)
 <LI><a href="#[24]">WIFI_Disconnect</a> from esp8266_at.o(i.WIFI_Disconnect) referenced from esp8266_at.o(.constdata)
 <LI><a href="#[26]">WIFI_GotIp</a> from esp8266_at.o(i.WIFI_GotIp) referenced from esp8266_at.o(.constdata)
 <LI><a href="#[28]">WIFI_ReturnTime</a> from esp8266_at.o(i.WIFI_ReturnTime) referenced from esp8266_at.o(.constdata)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_stm32l051xx.o(.text) referenced from startup_stm32l051xx.o(RESET)
 <LI><a href="#[20]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32l051xx.o(.text)
 <LI><a href="#[22]">_snputc</a> from printfa.o(i._snputc) referenced from printfa.o(i.__0snprintf)
 <LI><a href="#[23]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[23]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0vsprintf)
 <LI><a href="#[21]">fputc</a> from main.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[1e]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[20]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(.text)
</UL>
<P><STRONG><a name="[ac]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[29]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[44]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[ad]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[ae]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[af]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[b0]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[b1]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>ADC1_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM21_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM22_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l051xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[b2]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSystemClockFreq
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_TIME_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_DATE_Init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_Init1msTick
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI7021_SampleTempHumi
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Clock
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_Set
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_Run
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[b3]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI7021_SampleTempHumi
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Clock
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_CalculateWeek
</UL>

<P><STRONG><a name="[89]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessClock
</UL>

<P><STRONG><a name="[86]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessClock
</UL>

<P><STRONG><a name="[b4]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[2e]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Fill
</UL>

<P><STRONG><a name="[b5]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2d]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_UART_ReceiveIdle
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Power
</UL>

<P><STRONG><a name="[70]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C1_Init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[b7]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[9f]"></a>strstr</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_ReceiveProcess
</UL>

<P><STRONG><a name="[87]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessClock
</UL>

<P><STRONG><a name="[30]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>

<P><STRONG><a name="[33]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI7021_Measure
</UL>

<P><STRONG><a name="[34]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[8e]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI7021_Measure
</UL>

<P><STRONG><a name="[8d]"></a>__ARM_scalbnf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fscalb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI7021_Measure
</UL>

<P><STRONG><a name="[b8]"></a>scalbnf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fscalb.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[3a]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI7021_Measure
</UL>

<P><STRONG><a name="[3b]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[3c]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI7021_Measure
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[3d]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI7021_Measure
</UL>

<P><STRONG><a name="[91]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI7021_Measure
</UL>

<P><STRONG><a name="[8f]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI7021_Measure
</UL>

<P><STRONG><a name="[90]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI7021_Measure
</UL>

<P><STRONG><a name="[3e]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI7021_Measure
</UL>

<P><STRONG><a name="[3f]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[36]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[b9]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[37]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[ba]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[31]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[39]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[38]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[42]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[43]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[a6]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2a]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[bc]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[bd]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[45]"></a>CLOCK_CalculateWeek</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, clock.o(i.CLOCK_CalculateWeek))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = CLOCK_CalculateWeek &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_Run
</UL>

<P><STRONG><a name="[46]"></a>CLOCK_Get</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, clock.o(i.CLOCK_Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CLOCK_Get &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_UART_ReceiveIdle
</UL>

<P><STRONG><a name="[56]"></a>CLOCK_GetData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, clock.o(i.CLOCK_GetData))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Clock
</UL>

<P><STRONG><a name="[48]"></a>CLOCK_Run</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, clock.o(i.CLOCK_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = CLOCK_Run &rArr; CLOCK_CalculateWeek &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_CalculateWeek
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_Function
</UL>

<P><STRONG><a name="[49]"></a>CLOCK_Set</STRONG> (Thumb, 178 bytes, Stack size 48 bytes, clock.o(i.CLOCK_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = CLOCK_Set &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_UART_ReceiveIdle
</UL>

<P><STRONG><a name="[4a]"></a>COMMON_Function</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, common.o(i.COMMON_Function))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = COMMON_Function &rArr; WIFI_SendCommand &rArr; WIFI_Init &rArr; PrintUsart2 &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_SendCommand
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI7021_SampleTempHumi
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWifiData
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Clock
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_Run
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>COMMON_Init</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, common.o(i.COMMON_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = COMMON_Init &rArr; SI7021_SampleTempHumi &rArr; SI7021_Measure &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_UART_ReceiveDmaInit
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Power
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI7021_SampleTempHumi
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI7021_Init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWifiData
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e]"></a>DISP_Clock</STRONG> (Thumb, 254 bytes, Stack size 40 bytes, display.o(i.DISP_Clock))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = DISP_Clock &rArr; SSD1306_UpdateScreen &rArr; SSD1306_WriteCommand &rArr; SSD1306_I2C_Write &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_UpdateScreen
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Puts
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_GotoXY
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI7021_GetTemp
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI7021_GetHumi
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetData
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_Function
</UL>

<P><STRONG><a name="[50]"></a>DISP_Init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, display.o(i.DISP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = DISP_Init &rArr; SSD1306_Init &rArr; SSD1306_I2C_Init &rArr; MX_I2C1_Init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_Init
</UL>

<P><STRONG><a name="[10]"></a>DMA1_Channel4_5_6_7_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.DMA1_Channel4_5_6_7_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>GetWifiData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, esp8266_at.o(i.GetWifiData))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_UART_ReceiveIdle
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_Function
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>LL_GPIO_Init</STRONG> (Thumb, 174 bytes, Stack size 20 bytes, stm32l0xx_ll_gpio.o(i.LL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C1_Init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[74]"></a>LL_I2C_Init</STRONG> (Thumb, 108 bytes, Stack size 12 bytes, stm32l0xx_ll_i2c.o(i.LL_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LL_I2C_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C1_Init
</UL>

<P><STRONG><a name="[5c]"></a>LL_Init1msTick</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32l0xx_ll_utils.o(i.LL_Init1msTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LL_Init1msTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[5d]"></a>LL_RCC_GetUSARTClockFreq</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, stm32l0xx_ll_rcc.o(i.LL_RCC_GetUSARTClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LL_RCC_GetUSARTClockFreq &rArr; RCC_GetSystemClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSystemClockFreq
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK2ClockFreq
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK1ClockFreq
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKClockFreq
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_LSE_IsReady
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_IsActiveFlag_HSIDIV
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_HSI_IsReady
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockSource
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
</UL>

<P><STRONG><a name="[66]"></a>LL_RTC_DATE_Init</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, stm32l0xx_ll_rtc.o(i.LL_RTC_DATE_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LL_RTC_DATE_Init &rArr; LL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_WaitForSynchro
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_EnterInitMode
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_DATE_Config
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>

<P><STRONG><a name="[67]"></a>LL_RTC_EnterInitMode</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, stm32l0xx_ll_rtc.o(i.LL_RTC_EnterInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LL_RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_TIME_Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_DATE_Init
</UL>

<P><STRONG><a name="[6a]"></a>LL_RTC_Init</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, stm32l0xx_ll_rtc.o(i.LL_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = LL_RTC_Init &rArr; LL_RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>

<P><STRONG><a name="[6b]"></a>LL_RTC_TIME_Init</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, stm32l0xx_ll_rtc.o(i.LL_RTC_TIME_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LL_RTC_TIME_Init &rArr; LL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_WaitForSynchro
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_EnterInitMode
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_TIME_Config
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>

<P><STRONG><a name="[69]"></a>LL_RTC_WaitForSynchro</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, stm32l0xx_ll_rtc.o(i.LL_RTC_WaitForSynchro))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LL_RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_TIME_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_DATE_Init
</UL>

<P><STRONG><a name="[9a]"></a>LL_SetSystemCoreClock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l0xx_ll_utils.o(i.LL_SetSystemCoreClock))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[6d]"></a>LL_USART_Init</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32l0xx_ll_usart.o(i.LL_USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LL_USART_Init &rArr; LL_RCC_GetUSARTClockFreq &rArr; RCC_GetSystemClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
</UL>

<P><STRONG><a name="[8c]"></a>LL_mDelay</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32l0xx_ll_utils.o(i.LL_mDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_mDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI7021_SampleTempHumi
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI7021_Measure
</UL>

<P><STRONG><a name="[12]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32l0xx_it.o(i.LPTIM1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPTIM1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM1_IsrHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>LPTIM1_IsrHandle</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, common.o(i.LPTIM1_IsrHandle))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM1_IRQHandler
</UL>

<P><STRONG><a name="[aa]"></a>MX_DMA_Init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, dma.o(i.MX_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MX_DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6f]"></a>MX_GPIO_Init</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, gpio.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = MX_GPIO_Init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IOP_GRP1_EnableClock
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[73]"></a>MX_I2C1_Init</STRONG> (Thumb, 174 bytes, Stack size 80 bytes, i2c.o(i.MX_I2C1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = MX_I2C1_Init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_I2C_Init
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI7021_I2C_Init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_I2C_Init
</UL>

<P><STRONG><a name="[ab]"></a>MX_LPTIM1_Init</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, lptim.o(i.MX_LPTIM1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MX_LPTIM1_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[75]"></a>MX_RTC_Init</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, rtc.o(i.MX_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MX_RTC_Init &rArr; LL_RTC_TIME_Init &rArr; LL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_TIME_Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_DATE_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[76]"></a>MX_USART1_UART_Init</STRONG> (Thumb, 146 bytes, Stack size 80 bytes, usart.o(i.MX_USART1_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = MX_USART1_UART_Init &rArr; LL_USART_Init &rArr; LL_RCC_GetUSARTClockFreq &rArr; RCC_GetSystemClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_ConfigAsyncMode
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IOP_GRP1_EnableClock
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[79]"></a>MX_USART2_UART_Init</STRONG> (Thumb, 320 bytes, Stack size 80 bytes, usart.o(i.MX_USART2_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = MX_USART2_UART_Init &rArr; LL_USART_Init &rArr; LL_RCC_GetUSARTClockFreq &rArr; RCC_GetSystemClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_ConfigAsyncMode
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IOP_GRP1_EnableClock
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_DMA_SetPeriphSize
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_DMA_SetPeriphRequest
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_DMA_SetPeriphIncMode
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_DMA_SetMode
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_DMA_SetMemorySize
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_DMA_SetMemoryIncMode
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_DMA_SetDataTransferDirection
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_DMA_SetChannelPriorityLevel
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.NMI_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>PrintUsart2</STRONG> (Thumb, 72 bytes, Stack size 232 bytes, wifi_uart_if.o(i.PrintUsart2))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = PrintUsart2 &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_SendCommand
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Init
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Disconnect
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_ConnectedFail
</UL>

<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.RTC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>SI7021_GetHumi</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, si7021.o(i.SI7021_GetHumi))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Clock
</UL>

<P><STRONG><a name="[54]"></a>SI7021_GetTemp</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, si7021.o(i.SI7021_GetTemp))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Clock
</UL>

<P><STRONG><a name="[8a]"></a>SI7021_I2C_Init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, si7021_iic_hw.o(i.SI7021_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = SI7021_I2C_Init &rArr; MX_I2C1_Init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C1_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI7021_Init
</UL>

<P><STRONG><a name="[51]"></a>SI7021_Init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, si7021.o(i.SI7021_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = SI7021_Init &rArr; SI7021_I2C_Init &rArr; MX_I2C1_Init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI7021_I2C_Init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_Init
</UL>

<P><STRONG><a name="[8b]"></a>SI7021_Measure</STRONG> (Thumb, 540 bytes, Stack size 32 bytes, si7021_iic_hw.o(i.SI7021_Measure))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = SI7021_Measure &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_mDelay
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI7021_SampleTempHumi
</UL>

<P><STRONG><a name="[4b]"></a>SI7021_SampleTempHumi</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, si7021.o(i.SI7021_SampleTempHumi))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = SI7021_SampleTempHumi &rArr; SI7021_Measure &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_mDelay
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI7021_Measure
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_Function
</UL>

<P><STRONG><a name="[98]"></a>SSD1306_DrawPixel</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, ssd1306.o(i.SSD1306_DrawPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SSD1306_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Putc
</UL>

<P><STRONG><a name="[92]"></a>SSD1306_Fill</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ssd1306.o(i.SSD1306_Fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SSD1306_Fill
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Init
</UL>

<P><STRONG><a name="[57]"></a>SSD1306_GotoXY</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ssd1306.o(i.SSD1306_GotoXY))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Clock
</UL>

<P><STRONG><a name="[93]"></a>SSD1306_I2C_Init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ssd1306_iic_hw.o(i.SSD1306_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = SSD1306_I2C_Init &rArr; MX_I2C1_Init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C1_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Init
</UL>

<P><STRONG><a name="[95]"></a>SSD1306_I2C_WriteMulti</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ssd1306_iic_hw.o(i.SSD1306_I2C_WriteMulti))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SSD1306_I2C_WriteMulti &rArr; SSD1306_I2C_Write &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_I2C_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_UpdateScreen
</UL>

<P><STRONG><a name="[5b]"></a>SSD1306_Init</STRONG> (Thumb, 216 bytes, Stack size 8 bytes, ssd1306.o(i.SSD1306_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = SSD1306_Init &rArr; SSD1306_I2C_Init &rArr; MX_I2C1_Init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_UpdateScreen
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Fill
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_WriteCommand
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_I2C_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
</UL>

<P><STRONG><a name="[97]"></a>SSD1306_Putc</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, ssd1306.o(i.SSD1306_Putc))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SSD1306_Putc &rArr; SSD1306_DrawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Puts
</UL>

<P><STRONG><a name="[59]"></a>SSD1306_Puts</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, ssd1306.o(i.SSD1306_Puts))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SSD1306_Puts &rArr; SSD1306_Putc &rArr; SSD1306_DrawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Putc
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Clock
</UL>

<P><STRONG><a name="[5a]"></a>SSD1306_UpdateScreen</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ssd1306.o(i.SSD1306_UpdateScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SSD1306_UpdateScreen &rArr; SSD1306_WriteCommand &rArr; SSD1306_I2C_Write &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_WriteCommand
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_I2C_WriteMulti
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Clock
</UL>

<P><STRONG><a name="[96]"></a>SSD1306_WriteCommand</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ssd1306_iic_hw.o(i.SSD1306_WriteCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SSD1306_WriteCommand &rArr; SSD1306_I2C_Write &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_I2C_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_UpdateScreen
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Init
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[99]"></a>SystemClock_Config</STRONG> (Thumb, 290 bytes, Stack size 24 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SystemClock_Config &rArr; LL_Init1msTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetSystemCoreClock
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_Init1msTick
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_SetUSARTClockSource
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f]"></a>SystemInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_stm32l0xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(.text)
</UL>
<P><STRONG><a name="[1c]"></a>USART2_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32l0xx_it.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = USART2_IRQHandler &rArr; WIFI_UART_ReceiveIdle &rArr; CLOCK_Set &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_UART_ReceiveIdle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l051xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>WIFI_Power</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, esp8266_at.o(i.WIFI_Power))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WIFI_Power &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_Init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_SendCommand
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_ReturnTime
</UL>

<P><STRONG><a name="[9e]"></a>WIFI_ReceiveProcess</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, esp8266_at.o(i.WIFI_ReceiveProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = WIFI_ReceiveProcess &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_UART_ReceiveIdle
</UL>

<P><STRONG><a name="[4d]"></a>WIFI_SendCommand</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, esp8266_at.o(i.WIFI_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = WIFI_SendCommand &rArr; WIFI_Init &rArr; PrintUsart2 &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Power
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintUsart2
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_Function
</UL>

<P><STRONG><a name="[52]"></a>WIFI_UART_ReceiveDmaInit</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, wifi_uart_if.o(i.WIFI_UART_ReceiveDmaInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WIFI_UART_ReceiveDmaInit
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_UART_ReceiveIdle
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_Init
</UL>

<P><STRONG><a name="[9c]"></a>WIFI_UART_ReceiveIdle</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, wifi_uart_if.o(i.WIFI_UART_ReceiveIdle))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = WIFI_UART_ReceiveIdle &rArr; CLOCK_Set &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_UART_ReceiveDmaInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWifiData
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_Set
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_Get
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_ReceiveProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[a0]"></a>__0printf</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[be]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[47]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_Init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_I2C_Write
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Power
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI7021_SampleTempHumi
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI7021_Init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_Set
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_Get
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_ReturnTime
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Init
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_GotIp
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Disconnect
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_ConnectedFail
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Connected
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessClock
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI7021_Measure
</UL>

<P><STRONG><a name="[bf]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[c0]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[a2]"></a>__0snprintf</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[c1]"></a>__1snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[85]"></a>__2snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessClock
</UL>

<P><STRONG><a name="[c2]"></a>__c89snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[c3]"></a>snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[a3]"></a>__0sprintf</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[c4]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[58]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Clock
</UL>

<P><STRONG><a name="[c5]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[c6]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[a4]"></a>__0vsprintf</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[c7]"></a>__1vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[c8]"></a>__2vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[c9]"></a>__c89vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[83]"></a>vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintUsart2
</UL>

<P><STRONG><a name="[41]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[ca]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[cb]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[cc]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[21]"></a>fputc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.fputc))
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[1e]"></a>main</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = main &rArr; COMMON_Function &rArr; WIFI_SendCommand &rArr; WIFI_Init &rArr; PrintUsart2 &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LPTIM1_Init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA_Init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_Function
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[9b]"></a>LL_RCC_SetUSARTClockSource</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(i.LL_RCC_SetUSARTClockSource))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[a9]"></a>__NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, main.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[71]"></a>LL_IOP_GRP1_EnableClock</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gpio.o(i.LL_IOP_GRP1_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_IOP_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[7c]"></a>LL_DMA_SetChannelPriorityLevel</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usart.o(i.LL_DMA_SetChannelPriorityLevel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_DMA_SetChannelPriorityLevel
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
</UL>

<P><STRONG><a name="[7b]"></a>LL_DMA_SetDataTransferDirection</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usart.o(i.LL_DMA_SetDataTransferDirection))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_DMA_SetDataTransferDirection
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
</UL>

<P><STRONG><a name="[7f]"></a>LL_DMA_SetMemoryIncMode</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usart.o(i.LL_DMA_SetMemoryIncMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_DMA_SetMemoryIncMode
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
</UL>

<P><STRONG><a name="[81]"></a>LL_DMA_SetMemorySize</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usart.o(i.LL_DMA_SetMemorySize))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_DMA_SetMemorySize
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
</UL>

<P><STRONG><a name="[7d]"></a>LL_DMA_SetMode</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usart.o(i.LL_DMA_SetMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_DMA_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
</UL>

<P><STRONG><a name="[7e]"></a>LL_DMA_SetPeriphIncMode</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usart.o(i.LL_DMA_SetPeriphIncMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_DMA_SetPeriphIncMode
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
</UL>

<P><STRONG><a name="[7a]"></a>LL_DMA_SetPeriphRequest</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usart.o(i.LL_DMA_SetPeriphRequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_DMA_SetPeriphRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
</UL>

<P><STRONG><a name="[80]"></a>LL_DMA_SetPeriphSize</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usart.o(i.LL_DMA_SetPeriphSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_DMA_SetPeriphSize
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
</UL>

<P><STRONG><a name="[77]"></a>LL_IOP_GRP1_EnableClock</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, usart.o(i.LL_IOP_GRP1_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_IOP_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
</UL>

<P><STRONG><a name="[78]"></a>LL_USART_ConfigAsyncMode</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usart.o(i.LL_USART_ConfigAsyncMode))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
</UL>

<P><STRONG><a name="[5e]"></a>LL_RCC_GetUSARTClockSource</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l0xx_ll_rcc.o(i.LL_RCC_GetUSARTClockSource))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
</UL>

<P><STRONG><a name="[62]"></a>LL_RCC_HSI_IsReady</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l0xx_ll_rcc.o(i.LL_RCC_HSI_IsReady))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
</UL>

<P><STRONG><a name="[63]"></a>LL_RCC_IsActiveFlag_HSIDIV</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l0xx_ll_rcc.o(i.LL_RCC_IsActiveFlag_HSIDIV))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSystemClockFreq
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
</UL>

<P><STRONG><a name="[64]"></a>LL_RCC_LSE_IsReady</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l0xx_ll_rcc.o(i.LL_RCC_LSE_IsReady))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
</UL>

<P><STRONG><a name="[60]"></a>RCC_GetHCLKClockFreq</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32l0xx_ll_rcc.o(i.RCC_GetHCLKClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
</UL>

<P><STRONG><a name="[65]"></a>RCC_GetPCLK1ClockFreq</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32l0xx_ll_rcc.o(i.RCC_GetPCLK1ClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
</UL>

<P><STRONG><a name="[61]"></a>RCC_GetPCLK2ClockFreq</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32l0xx_ll_rcc.o(i.RCC_GetPCLK2ClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
</UL>

<P><STRONG><a name="[5f]"></a>RCC_GetSystemClockFreq</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, stm32l0xx_ll_rcc.o(i.RCC_GetSystemClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RCC_GetSystemClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_IsActiveFlag_HSIDIV
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
</UL>

<P><STRONG><a name="[68]"></a>LL_RTC_DATE_Config</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32l0xx_ll_rtc.o(i.LL_RTC_DATE_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_RTC_DATE_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_DATE_Init
</UL>

<P><STRONG><a name="[6c]"></a>LL_RTC_TIME_Config</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32l0xx_ll_rtc.o(i.LL_RTC_TIME_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_RTC_TIME_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_TIME_Init
</UL>

<P><STRONG><a name="[94]"></a>SSD1306_I2C_Write</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, ssd1306_iic_hw.o(i.SSD1306_I2C_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SSD1306_I2C_Write &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_WriteCommand
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_I2C_WriteMulti
</UL>

<P><STRONG><a name="[88]"></a>AscToHex</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, esp8266_at.o(i.AscToHex))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessClock
</UL>

<P><STRONG><a name="[84]"></a>ProcessClock</STRONG> (Thumb, 406 bytes, Stack size 96 bytes, esp8266_at.o(i.ProcessClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ProcessClock &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AscToHex
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_ReturnTime
</UL>

<P><STRONG><a name="[25]"></a>WIFI_Connected</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, esp8266_at.o(i.WIFI_Connected))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WIFI_Connected &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> esp8266_at.o(.constdata)
</UL>
<P><STRONG><a name="[27]"></a>WIFI_ConnectedFail</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, esp8266_at.o(i.WIFI_ConnectedFail))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = WIFI_ConnectedFail &rArr; PrintUsart2 &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintUsart2
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> esp8266_at.o(.constdata)
</UL>
<P><STRONG><a name="[24]"></a>WIFI_Disconnect</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, esp8266_at.o(i.WIFI_Disconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = WIFI_Disconnect &rArr; PrintUsart2 &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintUsart2
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> esp8266_at.o(.constdata)
</UL>
<P><STRONG><a name="[26]"></a>WIFI_GotIp</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, esp8266_at.o(i.WIFI_GotIp))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WIFI_GotIp &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> esp8266_at.o(.constdata)
</UL>
<P><STRONG><a name="[9d]"></a>WIFI_Init</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, esp8266_at.o(i.WIFI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = WIFI_Init &rArr; PrintUsart2 &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintUsart2
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_SendCommand
</UL>

<P><STRONG><a name="[28]"></a>WIFI_ReturnTime</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, esp8266_at.o(i.WIFI_ReturnTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = WIFI_ReturnTime &rArr; ProcessClock &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Power
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessClock
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> esp8266_at.o(.constdata)
</UL>
<P><STRONG><a name="[a5]"></a>_fp_digits</STRONG> (Thumb, 344 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[a1]"></a>_printf_core</STRONG> (Thumb, 1754 bytes, Stack size 128 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0snprintf
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[a8]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[a7]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[22]"></a>_snputc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, printfa.o(i._snputc))
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0snprintf)
</UL>
<P><STRONG><a name="[23]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> printfa.o(i.__0sprintf)
<LI> printfa.o(i.__0vsprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
